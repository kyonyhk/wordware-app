import React from 'react';
import { css } from '../../../../styled-system/css';
import { useIcon } from '../../../hooks/useIcon';

interface DocumentationProps {
  className?: string;
  width?: number;
  height?: number;
  color?: string;
}

export const Documentation: React.FC<DocumentationProps> = ({
  className,
  ...props
}) => {
  const { width, height, viewBox, scaleFactor, iconStyles } = useIcon(props);

  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={width}
      height={height}
      viewBox={viewBox}
      fill="none"
      className={`${iconStyles} ${className || ''}`}
    >
      <g transform={`scale(${scaleFactor})`}>
        <path
          opacity="0.2"
          d="M13.3332 9.33333V4.99994C13.3332 3.34312 11.9901 2 10.3332 2C10.3332 2.73638 9.73628 3.33333 8.9999 3.33333H6.9999C6.26352 3.33333 5.66656 2.73638 5.66656 2C4.00968 2 2.6665 3.34318 2.6665 5.00006V9.33333C2.6665 11.2002 2.6665 12.1336 3.02982 12.8466C3.34939 13.4738 3.85933 13.9838 4.48654 14.3034C5.19958 14.6667 6.133 14.6667 7.99984 14.6667C9.86668 14.6667 10.8001 14.6667 11.5131 14.3034C12.1403 13.9838 12.6503 13.4738 12.9699 12.8466C13.3332 12.1336 13.3332 11.2002 13.3332 9.33333Z"
          fill="currentColor"
        />
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M4.94051 2.61954C3.91173 2.94704 3.1665 3.91028 3.1665 5.04758V9.33329C3.1665 10.275 3.16689 10.9511 3.21026 11.4819C3.25314 12.0068 3.33556 12.3453 3.47532 12.6196C3.74696 13.1527 4.18041 13.5862 4.71353 13.8578C4.98782 13.9976 5.32631 14.08 5.85123 14.1229C6.38198 14.1662 7.05817 14.1666 7.99984 14.1666C8.94151 14.1666 9.61769 14.1662 10.1484 14.1229C10.6734 14.08 11.0119 13.9976 11.2861 13.8578C11.8193 13.5862 12.2527 13.1527 12.5244 12.6196C12.6641 12.3453 12.7465 12.0068 12.7894 11.4819C12.8328 10.9511 12.8332 10.275 12.8332 9.33329V5.04758C12.8332 3.91028 12.0879 2.94704 11.0592 2.61954C10.8051 3.32717 10.1282 3.83329 9.33317 3.83329H6.6665C5.87143 3.83329 5.19456 3.32718 4.94051 2.61954ZM11.1226 1.59928C12.6779 1.97549 13.8332 3.37662 13.8332 5.04758V9.33329V9.35568V9.35571C13.8332 10.2702 13.8332 10.9871 13.7861 11.5633C13.7382 12.1501 13.6389 12.6348 13.4154 13.0736C13.0478 13.7949 12.4614 14.3813 11.7401 14.7488C11.3014 14.9724 10.8166 15.0716 10.2299 15.1196C9.65366 15.1666 8.93672 15.1666 8.02226 15.1666H8.02222H7.99984H7.97745H7.97742C7.06296 15.1666 6.34602 15.1666 5.76979 15.1196C5.18303 15.0716 4.69829 14.9724 4.25954 14.7488C3.53825 14.3813 2.95183 13.7949 2.58431 13.0736C2.36076 12.6348 2.26152 12.1501 2.21358 11.5633C2.1665 10.9871 2.1665 10.2701 2.1665 9.35567V9.33329V5.04758C2.1665 3.37663 3.32173 1.97549 4.87709 1.59928C5.05985 0.779461 5.79161 0.166626 6.6665 0.166626H9.33317C10.2081 0.166626 10.9398 0.779463 11.1226 1.59928ZM5.95693 2.43715C6.11034 2.35177 6.21412 2.18799 6.21412 1.99996C6.21412 1.81193 6.11034 1.64815 5.95693 1.56277C6.10371 1.32505 6.3666 1.16663 6.6665 1.16663H9.33317C9.79341 1.16663 10.1665 1.53972 10.1665 1.99996C10.1665 2.4602 9.79341 2.83329 9.33317 2.83329H6.6665C6.3666 2.83329 6.10371 2.67487 5.95693 2.43715ZM5.49984 7.33329C5.49984 7.05715 5.7237 6.83329 5.99984 6.83329H9.99984C10.276 6.83329 10.4998 7.05715 10.4998 7.33329C10.4998 7.60944 10.276 7.83329 9.99984 7.83329H5.99984C5.7237 7.83329 5.49984 7.60944 5.49984 7.33329ZM5.99984 9.49996C5.7237 9.49996 5.49984 9.72382 5.49984 9.99996C5.49984 10.2761 5.7237 10.5 5.99984 10.5H8.6665C8.94265 10.5 9.1665 10.2761 9.1665 9.99996C9.1665 9.72382 8.94265 9.49996 8.6665 9.49996H5.99984Z"
          fill="currentColor"
        />
      </g>
    </svg>
  );
};
