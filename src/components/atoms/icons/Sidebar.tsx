import React from 'react';
import { css } from '../../../../styled-system/css';
import { useIcon } from '../../../hooks/useIcon';

interface SidebarProps {
  className?: string;
  width?: number;
  height?: number;
  color?: string;
}

export const Sidebar: React.FC<SidebarProps> = ({ className, ...props }) => {
  const { width, height, viewBox, scaleFactor, iconStyles } = useIcon(props);

  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={width}
      height={height}
      viewBox={viewBox}
      fill="none"
      className={`${iconStyles} ${className || ''}`}
    >
      <g transform={`scale(${scaleFactor})`}>
        <path
          opacity="0.2"
          d="M6 1.33337H10.4C11.8935 1.33337 12.6402 1.33337 13.2106 1.62402C13.7124 1.87969 14.1204 2.28763 14.376 2.7894C14.6667 3.35983 14.6667 4.10657 14.6667 5.60004V10.4C14.6667 11.8935 14.6667 12.6403 14.376 13.2107C14.1204 13.7124 13.7124 14.1204 13.2106 14.3761C12.6402 14.6667 11.8935 14.6667 10.4 14.6667H6V1.33337Z"
          fill="currentColor"
        />
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M6.66683 0.833374H6.64446C6.42723 0.833373 6.22116 0.833373 6.02546 0.834003C6.01708 0.833585 6.00865 0.833374 6.00016 0.833374C5.99046 0.833374 5.98083 0.83365 5.97127 0.834195C5.36725 0.836542 4.86345 0.845589 4.43679 0.880449C3.85003 0.928389 3.36529 1.02763 2.92653 1.25118C2.20524 1.6187 1.61882 2.20512 1.2513 2.92641C1.02775 3.36516 0.928511 3.8499 0.880571 4.43666C0.833491 5.0129 0.833493 5.72985 0.833496 6.64433V6.6667V9.33337V9.35575C0.833493 10.2702 0.833491 10.9872 0.880571 11.5634C0.928511 12.1502 1.02775 12.6349 1.2513 13.0737C1.61882 13.795 2.20524 14.3814 2.92653 14.7489C3.36529 14.9725 3.85003 15.0717 4.43679 15.1196C4.86344 15.1545 5.36725 15.1635 5.97126 15.1659C5.98083 15.1664 5.99046 15.1667 6.00016 15.1667C6.00865 15.1667 6.01708 15.1665 6.02546 15.1661C6.22114 15.1667 6.4272 15.1667 6.6444 15.1667H6.64444H6.66683H9.3335H9.35588H9.35592C10.2704 15.1667 10.9873 15.1667 11.5635 15.1196C12.1503 15.0717 12.635 14.9725 13.0738 14.7489C13.7951 14.3814 14.3815 13.795 14.749 13.0737C14.9726 12.6349 15.0718 12.1502 15.1198 11.5634C15.1668 10.9872 15.1668 10.2703 15.1668 9.3558V9.35576V9.33338V6.66671V6.64432V6.64429C15.1668 5.72983 15.1668 5.01289 15.1198 4.43666C15.0718 3.8499 14.9726 3.36516 14.749 2.92641C14.3815 2.20512 13.7951 1.6187 13.0738 1.25118C12.635 1.02763 12.1503 0.928389 11.5635 0.880449C10.9873 0.833368 10.2704 0.833371 9.35587 0.833374H9.3335H6.66683ZM6.50016 14.1667C6.55478 14.1667 6.61033 14.1667 6.66683 14.1667H9.3335C10.2752 14.1667 10.9513 14.1663 11.4821 14.123C12.007 14.0801 12.3455 13.9976 12.6198 13.8579C13.1529 13.5863 13.5864 13.1528 13.858 12.6197C13.9978 12.3454 14.0802 12.0069 14.1231 11.482C14.1664 10.9512 14.1668 10.275 14.1668 9.33338V6.66671C14.1668 5.72504 14.1664 5.04885 14.1231 4.5181C14.0802 3.99318 13.9978 3.65469 13.858 3.3804C13.5864 2.84728 13.1529 2.41383 12.6198 2.14219C12.3455 2.00243 12.007 1.92002 11.4821 1.87713C10.9514 1.83376 10.2752 1.83337 9.3335 1.83337H6.66683C6.61033 1.83337 6.55478 1.83338 6.50016 1.83339L6.50016 14.1667ZM5.50016 1.83809C5.12033 1.84328 4.79893 1.85419 4.51822 1.87713C3.9933 1.92002 3.65481 2.00243 3.38052 2.14219C2.8474 2.41383 2.41395 2.84728 2.14231 3.3804C2.00256 3.65469 1.92014 3.99318 1.87725 4.5181C1.83389 5.04885 1.8335 5.72503 1.8335 6.6667V9.33337C1.8335 10.275 1.83389 10.9512 1.87725 11.482C1.92014 12.0069 2.00256 12.3454 2.14231 12.6197C2.41395 13.1528 2.8474 13.5863 3.38052 13.8579C3.65481 13.9976 3.9933 14.0801 4.51822 14.123C4.79893 14.1459 5.12033 14.1568 5.50016 14.162L5.50016 1.83809Z"
          fill="currentColor"
        />
      </g>
    </svg>
  );
};
